version: "3.8"

services:
  fateweaver-postgres:
    image: postgres:15
    container_name: fateweaver-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-fateweaver}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${POSTGRES_DB:-fateweaver}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-fateweaver} -d ${POSTGRES_DB:-fateweaver}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  fateweaver-backend:
    image: ${REGISTRY_URL:-registry.matthias-bouloc.fr}/${IMAGE_NAME:-fateweaver}/backend:${TAG:-latest}
    container_name: fateweaver-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-fateweaver}:${POSTGRES_PASSWORD:-changeme}@fateweaver-postgres:5432/${POSTGRES_DB:-fateweaver}?schema=public
      - PORT=3000
      - POSTGRES_HOST=fateweaver-postgres
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    working_dir: /app
    command: sh -c "chmod +x /app/deploy.sh && /app/deploy.sh"
    depends_on:
      fateweaver-postgres:
        condition: service_healthy
    restart: unless-stopped

  fateweaver-discord-bot:
    image: ${REGISTRY_URL:-registry.matthias-bouloc.fr}/${IMAGE_NAME:-fateweaver}/bot:${TAG:-latest}
    container_name: fateweaver-discord-bot
    environment:
      - NODE_ENV=production
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - API_URL=http://fateweaver-backend:3000
    depends_on:
      - fateweaver-backend
    restart: unless-stopped

volumes:
  postgres_data:
