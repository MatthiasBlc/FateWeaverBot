name: Build and Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          npm ci
          npx prisma generate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/backend:latest
            ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/backend:${{ github.sha }}

      - name: Build and push Discord Bot
        uses: docker/build-push-action@v4
        with:
          context: ./bot
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/bot:latest
            ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/bot:${{ github.sha }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Update Portainer Stack
        env:
          PORTAINER_URL: ${{ secrets.PORTAINER_URL }}
          PORTAINER_USERNAME: ${{ secrets.PORTAINER_USERNAME }}
          PORTAINER_PASSWORD: ${{ secrets.PORTAINER_PASSWORD }}
          STACK_ID: ${{ secrets.STACK_ID }}
          ENDPOINT_ID: ${{ secrets.ENDPOINT_ID }}
        run: |
          # Récupération du token d'authentification
          AUTH_RESPONSE=$(curl -s -X POST \
            "$PORTAINER_URL/api/auth" \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"$PORTAINER_USERNAME\",\"password\":\"$PORTAINER_PASSWORD\"}")

          TOKEN=$(echo $AUTH_RESPONSE | jq -r '.jwt')

          # Mise à jour de la stack
          curl -X PUT \
            "$PORTAINER_URL/api/stacks/$STACK_ID?endpointId=$ENDPOINT_ID" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"stackFileContent\": $(jq -n --arg content "$(cat docker-compose.prod.yml)" '$content | @json'),
              \"prune\": true,
              \"pullImage\": true,
              \"env\": [
                {\"name\": \"REGISTRY_URL\", \"value\": \"${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}\"},
                {\"name\": \"IMAGE_NAME\", \"value\": \"${{ secrets.IMAGE_NAME || 'fateweaver' }}\"},
                {\"name\": \"TAG\", \"value\": \"${{ github.sha }}\"},
                {\"name\": \"POSTGRES_PASSWORD\", \"value\": \"${{ secrets.POSTGRES_PASSWORD }}\"},
                {\"name\": \"SESSION_SECRET\", \"value\": \"${{ secrets.SESSION_SECRET }}\"},
                {\"name\": \"DISCORD_TOKEN\", \"value\": \"${{ secrets.DISCORD_TOKEN }}\"}
              ]
            }"

      - name: Notify on success
        if: success()
        run: |
          echo "Deployment successful!"
          echo "Backend image: ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/backend:${{ github.sha }}"
          echo "Bot image: ${{ secrets.REGISTRY_URL || 'registry.matthias-bouloc.fr' }}/${{ secrets.IMAGE_NAME || 'fateweaver' }}/bot:${{ github.sha }}"
