name: Build and Push to Registry

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}:latest
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Update Portainer Stack
        run: |
          # Récupération du token d'authentification
          AUTH_RESPONSE=$(curl -s -X POST \
            "${{ secrets.PORTAINER_URL }}/api/auth" \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"${{ secrets.PORTAINER_USERNAME }}\",\"password\":\"${{ secrets.PORTAINER_PASSWORD }}\"}")

          TOKEN=$(echo $AUTH_RESPONSE | jq -r '.jwt')

          # Récupération de la configuration actuelle de la stack
          STACK_INFO=$(curl -s -X GET \
            "${{ secrets.PORTAINER_URL }}/api/stacks" \
            -H "Authorization: Bearer $TOKEN" | \
            jq -r '.[] | select(.Name=="'${{ secrets.STACK_NAME }}'"')
          )

          STACK_ID=$(echo $STACK_INFO | jq -r '.Id')
          STACK_ENDPOINT_ID=$(echo $STACK_INFO | jq -r '.EndpointId')
          STACK_CONFIG=$(echo $STACK_INFO | jq '.StackFileContent')

          # Mise à jour de l'image dans la configuration
          UPDATED_CONFIG=$(echo $STACK_CONFIG | jq \
            --arg image "${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}" \
            '.services[].image = $image')

          # Mise à jour de la stack
          curl -X PUT \
            "${{ secrets.PORTAINER_URL }}/api/stacks/$STACK_ID?endpointId=$STACK_ENDPOINT_ID" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"stackFileContent\": $UPDATED_CONFIG}"
