name: Build and Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install CA certificates
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates
          sudo update-ca-certificates

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          npm ci
          npx prisma generate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/backend:${{ github.sha }}
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/backend:${{ secrets.TAG:-latest }}

      - name: Build and push Discord Bot image
        uses: docker/build-push-action@v4
        with:
          context: ./bot
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/bot:${{ github.sha }}
            ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/bot:${{ secrets.TAG:-latest }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Deploy to Portainer
        run: |
          chmod +x ./deploy_prod.sh
          # Export des secrets pour deploy_prod.sh
          export PORTAINER_URL="${{ secrets.PORTAINER_URL }}"
          export PORTAINER_USERNAME="${{ secrets.PORTAINER_USERNAME }}"
          export PORTAINER_PASSWORD="${{ secrets.PORTAINER_PASSWORD }}"
          export PORTAINER_API="${{ secrets.PORTAINER_API }}"
          export STACK_ID="${{ secrets.STACK_ID }}"        # ID API exact
          export ENDPOINT_ID="${{ secrets.ENDPOINT_ID }}"
          export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
          export POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
          export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"
          export DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}"
          export CORS_ORIGIN="${{ secrets.CORS_ORIGIN }}"
          export TAG="${{ secrets.TAG:-latest }}"
          export IMAGE_NAME="${{ secrets.IMAGE_NAME }}"
          ./deploy_prod.sh

      - name: Notify deployment status
        if: success()
        run: |
          echo "ðŸš€ DÃ©ploiement rÃ©ussi !"
          echo "Backend image: ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/backend:${{ secrets.TAG:-latest }}"
          echo "Bot image: ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}/bot:${{ secrets.TAG:-latest }}"
